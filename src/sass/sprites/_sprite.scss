// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arr-down-name: 'arr_down';
$arr-down-x: 40px;
$arr-down-y: 92px;
$arr-down-offset-x: -40px;
$arr-down-offset-y: -92px;
$arr-down-width: 16px;
$arr-down-height: 12px;
$arr-down-total-width: 131px;
$arr-down-total-height: 112px;
$arr-down-image: '../img/sprite.png';
$arr-down: (40px, 92px, -40px, -92px, 16px, 12px, 131px, 112px, '../img/sprite.png', 'arr_down', );
$metro-name: 'metro';
$metro-x: 19px;
$metro-y: 92px;
$metro-offset-x: -19px;
$metro-offset-y: -92px;
$metro-width: 16px;
$metro-height: 13px;
$metro-total-width: 131px;
$metro-total-height: 112px;
$metro-image: '../img/sprite.png';
$metro: (19px, 92px, -19px, -92px, 16px, 13px, 131px, 112px, '../img/sprite.png', 'metro', );
$slider-arr-black-l-name: 'slider_arr_black_l';
$slider-arr-black-l-x: 0px;
$slider-arr-black-l-y: 0px;
$slider-arr-black-l-offset-x: 0px;
$slider-arr-black-l-offset-y: 0px;
$slider-arr-black-l-width: 24px;
$slider-arr-black-l-height: 41px;
$slider-arr-black-l-total-width: 131px;
$slider-arr-black-l-total-height: 112px;
$slider-arr-black-l-image: '../img/sprite.png';
$slider-arr-black-l: (0px, 0px, 0px, 0px, 24px, 41px, 131px, 112px, '../img/sprite.png', 'slider_arr_black_l', );
$slider-arr-black-r-name: 'slider_arr_black_r';
$slider-arr-black-r-x: 29px;
$slider-arr-black-r-y: 0px;
$slider-arr-black-r-offset-x: -29px;
$slider-arr-black-r-offset-y: 0px;
$slider-arr-black-r-width: 24px;
$slider-arr-black-r-height: 41px;
$slider-arr-black-r-total-width: 131px;
$slider-arr-black-r-total-height: 112px;
$slider-arr-black-r-image: '../img/sprite.png';
$slider-arr-black-r: (29px, 0px, -29px, 0px, 24px, 41px, 131px, 112px, '../img/sprite.png', 'slider_arr_black_r', );
$slider-arr-blue-l-name: 'slider_arr_blue_l';
$slider-arr-blue-l-x: 58px;
$slider-arr-blue-l-y: 0px;
$slider-arr-blue-l-offset-x: -58px;
$slider-arr-blue-l-offset-y: 0px;
$slider-arr-blue-l-width: 24px;
$slider-arr-blue-l-height: 41px;
$slider-arr-blue-l-total-width: 131px;
$slider-arr-blue-l-total-height: 112px;
$slider-arr-blue-l-image: '../img/sprite.png';
$slider-arr-blue-l: (58px, 0px, -58px, 0px, 24px, 41px, 131px, 112px, '../img/sprite.png', 'slider_arr_blue_l', );
$slider-arr-blue-l-s-name: 'slider_arr_blue_l_s';
$slider-arr-blue-l-s-x: 0px;
$slider-arr-blue-l-s-y: 92px;
$slider-arr-blue-l-s-offset-x: 0px;
$slider-arr-blue-l-s-offset-y: -92px;
$slider-arr-blue-l-s-width: 14px;
$slider-arr-blue-l-s-height: 20px;
$slider-arr-blue-l-s-total-width: 131px;
$slider-arr-blue-l-s-total-height: 112px;
$slider-arr-blue-l-s-image: '../img/sprite.png';
$slider-arr-blue-l-s: (0px, 92px, 0px, -92px, 14px, 20px, 131px, 112px, '../img/sprite.png', 'slider_arr_blue_l_s', );
$slider-arr-blue-r-name: 'slider_arr_blue_r';
$slider-arr-blue-r-x: 87px;
$slider-arr-blue-r-y: 0px;
$slider-arr-blue-r-offset-x: -87px;
$slider-arr-blue-r-offset-y: 0px;
$slider-arr-blue-r-width: 24px;
$slider-arr-blue-r-height: 41px;
$slider-arr-blue-r-total-width: 131px;
$slider-arr-blue-r-total-height: 112px;
$slider-arr-blue-r-image: '../img/sprite.png';
$slider-arr-blue-r: (87px, 0px, -87px, 0px, 24px, 41px, 131px, 112px, '../img/sprite.png', 'slider_arr_blue_r', );
$slider-arr-blue-r-s-name: 'slider_arr_blue_r_s';
$slider-arr-blue-r-s-x: 116px;
$slider-arr-blue-r-s-y: 52px;
$slider-arr-blue-r-s-offset-x: -116px;
$slider-arr-blue-r-s-offset-y: -52px;
$slider-arr-blue-r-s-width: 14px;
$slider-arr-blue-r-s-height: 20px;
$slider-arr-blue-r-s-total-width: 131px;
$slider-arr-blue-r-s-total-height: 112px;
$slider-arr-blue-r-s-image: '../img/sprite.png';
$slider-arr-blue-r-s: (116px, 52px, -116px, -52px, 14px, 20px, 131px, 112px, '../img/sprite.png', 'slider_arr_blue_r_s', );
$slider-arr-white-l-name: 'slider_arr_white_l';
$slider-arr-white-l-x: 29px;
$slider-arr-white-l-y: 46px;
$slider-arr-white-l-offset-x: -29px;
$slider-arr-white-l-offset-y: -46px;
$slider-arr-white-l-width: 24px;
$slider-arr-white-l-height: 41px;
$slider-arr-white-l-total-width: 131px;
$slider-arr-white-l-total-height: 112px;
$slider-arr-white-l-image: '../img/sprite.png';
$slider-arr-white-l: (29px, 46px, -29px, -46px, 24px, 41px, 131px, 112px, '../img/sprite.png', 'slider_arr_white_l', );
$slider-arr-white-r-name: 'slider_arr_white_r';
$slider-arr-white-r-x: 58px;
$slider-arr-white-r-y: 46px;
$slider-arr-white-r-offset-x: -58px;
$slider-arr-white-r-offset-y: -46px;
$slider-arr-white-r-width: 24px;
$slider-arr-white-r-height: 41px;
$slider-arr-white-r-total-width: 131px;
$slider-arr-white-r-total-height: 112px;
$slider-arr-white-r-image: '../img/sprite.png';
$slider-arr-white-r: (58px, 46px, -58px, -46px, 24px, 41px, 131px, 112px, '../img/sprite.png', 'slider_arr_white_r', );
$slider-arr-yellow-l-name: 'slider_arr_yellow_l';
$slider-arr-yellow-l-x: 87px;
$slider-arr-yellow-l-y: 46px;
$slider-arr-yellow-l-offset-x: -87px;
$slider-arr-yellow-l-offset-y: -46px;
$slider-arr-yellow-l-width: 24px;
$slider-arr-yellow-l-height: 41px;
$slider-arr-yellow-l-total-width: 131px;
$slider-arr-yellow-l-total-height: 112px;
$slider-arr-yellow-l-image: '../img/sprite.png';
$slider-arr-yellow-l: (87px, 46px, -87px, -46px, 24px, 41px, 131px, 112px, '../img/sprite.png', 'slider_arr_yellow_l', );
$slider-arr-yellow-l-s-name: 'slider_arr_yellow_l_s';
$slider-arr-yellow-l-s-x: 116px;
$slider-arr-yellow-l-s-y: 26px;
$slider-arr-yellow-l-s-offset-x: -116px;
$slider-arr-yellow-l-s-offset-y: -26px;
$slider-arr-yellow-l-s-width: 15px;
$slider-arr-yellow-l-s-height: 21px;
$slider-arr-yellow-l-s-total-width: 131px;
$slider-arr-yellow-l-s-total-height: 112px;
$slider-arr-yellow-l-s-image: '../img/sprite.png';
$slider-arr-yellow-l-s: (116px, 26px, -116px, -26px, 15px, 21px, 131px, 112px, '../img/sprite.png', 'slider_arr_yellow_l_s', );
$slider-arr-yellow-r-name: 'slider_arr_yellow_r';
$slider-arr-yellow-r-x: 0px;
$slider-arr-yellow-r-y: 46px;
$slider-arr-yellow-r-offset-x: 0px;
$slider-arr-yellow-r-offset-y: -46px;
$slider-arr-yellow-r-width: 24px;
$slider-arr-yellow-r-height: 41px;
$slider-arr-yellow-r-total-width: 131px;
$slider-arr-yellow-r-total-height: 112px;
$slider-arr-yellow-r-image: '../img/sprite.png';
$slider-arr-yellow-r: (0px, 46px, 0px, -46px, 24px, 41px, 131px, 112px, '../img/sprite.png', 'slider_arr_yellow_r', );
$slider-arr-yellow-r-s-name: 'slider_arr_yellow_r_s';
$slider-arr-yellow-r-s-x: 116px;
$slider-arr-yellow-r-s-y: 0px;
$slider-arr-yellow-r-s-offset-x: -116px;
$slider-arr-yellow-r-s-offset-y: 0px;
$slider-arr-yellow-r-s-width: 15px;
$slider-arr-yellow-r-s-height: 21px;
$slider-arr-yellow-r-s-total-width: 131px;
$slider-arr-yellow-r-s-total-height: 112px;
$slider-arr-yellow-r-s-image: '../img/sprite.png';
$slider-arr-yellow-r-s: (116px, 0px, -116px, 0px, 15px, 21px, 131px, 112px, '../img/sprite.png', 'slider_arr_yellow_r_s', );
$spritesheet-width: 131px;
$spritesheet-height: 112px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($arr-down, $metro, $slider-arr-black-l, $slider-arr-black-r, $slider-arr-blue-l, $slider-arr-blue-l-s, $slider-arr-blue-r, $slider-arr-blue-r-s, $slider-arr-white-l, $slider-arr-white-r, $slider-arr-yellow-l, $slider-arr-yellow-l-s, $slider-arr-yellow-r, $slider-arr-yellow-r-s, );
$spritesheet: (131px, 112px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
